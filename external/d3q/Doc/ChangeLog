v 1.1.10
* Compatibility with QE 7.0
* Sort of working TDPH code (experimental!)

v 1.1.9
* CMake build added

v 1.1.8 
* Removed dependency on iotk
* Removed dependency on Powell, replaced with lmdif

v 1.1.7
* More bugfixes
* Aligned with QE 6.5
* Aligned with QE 6.6


v 1.1.6
* Bugfix to align with the porting of XC libraries in core QE
* Restart of tk code when doing CGP improved b yadding one more checkpoint after SMA

v 1.1.5
* Bugfix for d3q not working in parallel due to changes in band group diagonalization
* Also check experimental QHA code

v 1.1.4
* Several bugfixes in thermal2 code, in particular a missing factor 2 in the Casimir length
* d3q code brought to level with QE 6.4, this code will not be backported to any previous version
* New option intrinsic_lw=.false. allows one to skip the calculation of linewith completely, only casimir and isotopes are done (useful with the recompute_sma.m script in tools) see also Examples/mat3R.NULL
* Exact solution of BTE with shifted grids is not converging reliably, I think it is a detailed balance violation, I have disable it for now
* Added many features to r2q, like computing the Joint-DOS
* d3_sqom.x can apply neutron form factor, as long as you are willing to edit the f90 file and add your atomic species (it is easy) see thermal2/neutron.f90 and Examples/input.SQOM
* in d3_lw.x Added the mu_initial input parameter for the calculation of final state When mu_initial is specified, e_initial is automatically set to the energy of the mu-th eigenvalue, unless specified otherwise. In this case, the additional columns of the file will contain the decomposition over the mode of the final state.  If mu_initial is not set, than e_initial must be specified. Note that in this case, the code will compute the final state decomposition of the spectra weight at e_initial, and the additional columns in the file will include the contribution of each modeto the spectra weight. Final state decomposition redefined in a symmetric form that preservs q2->q3 change for the coalescence part (the X part is unchanged, except for numerical noise which is potentially reduced)
* It is now possible to specify a plane of q-points in QPOINTS blocks
* namelist keyword can also be spepcified at command line as "--keyword value"

v 1.1.3
* Bugfix for pools: scattering of charge density was changend in QE 6.2 but not here, could give very bad (i.e. absurd) result when using pools parallelism

v 1.1.2
* Code d3_tk.x in SMA mode can now cutoff phonons with a mfp longer than sample size, input variables casimi_length and casimir_dir now renamed to sample_length and sample_dir, as they can used for both approaches
* phonon modes can be sorted according to eigenmode continuity
* compatibility with qe 6.2

v 1.1.1
* D3 calculation of metallic systems has been improved, only full bands used for the Sternheimer equation: improved convergence.
* Added debug options to d3 and qq2rr, added documentation for tools.
* Added manual grid shift from input to thermal2 codes.

v 1.1.0
* the phonon HWHM was mistakenly used in the SMA and CGP calculations, instead of the FWHM, thanks to Francesco Macheda for reporting and helping with debugging
* version of d3q.x prior to 1.1.0 would save the complex conjugate of the D3 matrix (there is some freedom in the definition) which would result in poor result for most grid sizes (1x1x1 and 2x2x2 are fine). Now qq2rr contains a workaround that detects this case and takes the CC of the input D3 matrices
* openmp parallelization of d3_asr3.x allows for much faster sum rule, good scalability tested up to 4 or 8 CPUs
* the local part of the XC functional was always assumed to be Perdew-Zunger, this causes no error for PZ functional, a tiny error for PBE functional, possibly large error for other functionals.

v 1.0.7
* nasty bug in d3_tk.x, CGP calculation, wrong prefactor! Many thanks to Erpan Arkin for reporting and helping with the debug!
* added calculation of JDOS and RMS of atomic displacements to d3_r2q.x
* better threatmenet of LO-TO along paths
* support for random grids improved (should work in SMA)

v 1.0.6
* nasty bug in d3_qq2rr.x where the 3rd order matrix would not be read correctly has been fixed: PLEASE REGENERATE THE FORCE CONSTANT FILES!!

v 1.0.5
* tiny fix on the previous version (symmetrization removed for scattering modes as it is not necessary and does not respect detailed balance, i.e. possible funny results with small grids)
* fixed a bug when using MPI parallelism and isotopes (isotopes would be ignored on CPUs after the first one)

v 1.0.4
* one important change: quantities (linewidth, self-energy, scattering matrices, velocities) pertaining to degenerate phonon modes are now averaged out. This prevents broken symmetry when doing thermal conductivity calculations.

v 1.0.3
* fixed a case where a fuction result was used in an openmp reduce clause, causing segmentation fault on some intel compilers
* removed a mention of a non-existing unused subroutine, causing some compilers to rightfully complain
* not using vdCos and vdSin with intel compiler made easier (remove -D__HASVTRIG from thermal2/Makefile)
* openmp no more enable by default (it was actually unintended )

v 1.0.2
* fixed old style namelist in tutorial example input file (and fixed code to still read those)

v 1.0.1
* remove line from PROGRAM_sparse.f90 that prevented compilation (thanks S. Appalakondaiah for reporting)
* calculation of 3-body force constant now done in two passess (100x times faster)
* 3d order acoustic sum rule now imposed in-place (faster and much lower memory usage)

v 1.0
everything!


